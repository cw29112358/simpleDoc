在浏览器中输入网址后的过程

1、通过访问的域名找出其IP地址（域名解析）。DNS查找过程如下：
    * 浏览器缓存 – 浏览器会缓存DNS记录一段时间。
    * 系统缓存 – 系统调用（windows里是gethostbyname）。这样便可获得系统缓存中的记录。
    * 路由器缓存 – 接着，前面的查询请求发向路由器，它一般会有自己的DNS缓存。
    * ISP DNS 缓存 – 接下来要check的就是ISP缓存DNS的服务器。在这一般都能找到相应的缓存记录。
    * 根域名服务器 – 你的ISP的DNS服务器从跟域名服务器开始进行递归搜索，从.com顶级域名服务器到Facebook的域名服务器。一般DNS服务器的缓存中会 有.com域名服务器中的域名，所以到顶级服务器的匹配过程不是那么必要了。

2、向IP对应的服务器发送HTTP请求
    TCP/IP（ 传输控制协议）：定义了电子设备（比如计算机）如何连入因特网，以及数据如何在它们之间传输的标准。
    TCP/IP 使用 32 个比特或者 4 组 0 到 255 之间的数字来为计算机编址。

    在全世界，数量庞大的 DNS 服务器被连入因特网。DNS 服务器负责将域名翻译为 TCP/IP 地址，同时负责使用新的域名信息更新彼此的系统。
    当一个新的域名连同其 TCP/IP 地址一起注册后，全世界的 DNS 服务器都会对此信息进行更新。

Http协议与TCP协议简单理解
　　TCP协议对应于传输层，而HTTP协议对应于应用层，从本质上来说，二者没有可比性。
    Http协议是建立在TCP协议基础之上的，当浏览器需要从服务器获取网页数据的时候，会发出一次Http请求。
    Http会通过TCP建立起一个到服务器的连接通道，当本次请求需要的数据完毕后，Http会立即将TCP连接断开，这个过程是很短的。所以Http连接是一种短连接，是一种无状态的连接。
    所谓的无状态，是指浏览器每次向服务器发起请求的时候，不是通过一个连接，而是每次都建立一个新的连接。
    如果是一个连接的话，服务器进程中就能保持住这个连接并且在内存中记住一些信息状态。
    而每次请求结束后，连接就关闭，相关的内容就释放了，所以记不住任何状态，成为无状态连接。

HTTP：超文本传输协议
HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。
HTTP默认端口号为80，但是你也可以改为8080或者其他端口。

HTTP三点注意事项
HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。
HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。
HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。

HTTP是基于客户端/服务端（C/S）的架构模型，通过一个可靠的链接来交换信息，是一个无状态的请求/响应协议。
一个HTTP"客户端"是一个应用程序（Web浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个HTTP的请求的目的。
一个HTTP"服务器"同样也是一个应用程序（通常是一个Web服务，如Apache Web服务器或IIS服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。
HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。
一旦建立连接后，数据消息就通过类似Internet邮件所使用的格式[RFC5322]和多用途Internet邮件扩展（MIME）[RFC2045]来传送。

HTTP请求方法: GET,POST,DELETD,PUT,HEAD,CONNECT,OPTIONS,TRACE,PATCH
HTTP状态码分类:
    1**: 信息，服务器收到请求，需要请求者继续执行操作
    2**: 成功，操作被成功接收并处理
    3**: 重定向，需要进一步的操作以完成请求
    4**: 客户端错误，请求包含语法错误或无法完成请求
    5**: 服务器错误，服务器在处理请求的过程中发生了错误

HTTP请求头：

三次握手：
第一次:
客户端 - - > 服务器 此时服务器知道了客户端要建立连接了
第二次:
客户端 < - - 服务器 此时客户端知道服务器收到连接请求了
第三次:
客户端 - - > 服务器 此时服务器知道客户端收到了自己的回应

3、服务器响应请求，发回网页内容


















